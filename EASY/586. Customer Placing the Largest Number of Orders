Table: Orders

+-----------------+----------+
| Column Name     | Type     |
+-----------------+----------+
| order_number    | int      |
| customer_number | int      |
+-----------------+----------+
order_number is the primary key for this table.
This table contains information about the order ID and the customer ID.
 

Write an SQL query to find the customer_number for the customer who has placed the largest number of orders.

It is guaranteed that exactly one customer will have placed more orders than any other customer.

The query result format is in the following example:

 

Orders table:
+--------------+-----------------+
| order_number | customer_number |
+--------------+-----------------+
| 1            | 1               |
| 2            | 2               |
| 3            | 3               |
| 4            | 3               |
+--------------+-----------------+

Result table:
+-----------------+
| customer_number |
+-----------------+
| 3               |
+-----------------+
The customer with number 3 has two orders, which is greater than either customer 1 or 2 because each of them only has one order. 
So the result is customer_number 3.

Solution 1
----------

WITH CTE
AS
(
SELECT customer_number,COUNT(order_number) CNT
FROM orders
GROUP BY customer_number )

SELECT customer_number
FROM
(
SELECT customer_number, RANK() OVER (ORDER BY CNT desc) rnk 
FROM CTE ) B
WHERE rnk = 1

Solution 2
----------

WITH CTE
AS
(
SELECT customer_number, RANK() OVER  (ORDER BY COUNT(order_number) desc) rnk 
FROM Orders GROUP BY customer_number)

SELECT customer_number FROM CTE WHERE rnk=1

